

package Dise√±os;
    import javax.swing.JOptionPane;
    import javax.swing.table.DefaultTableModel;
    import CRUD.*;
    import java.awt.HeadlessException;
    import java.sql.ResultSet;
    import java.sql.SQLException;

/**
 *
 * @author DFVAL
 */
public class Pedidos extends javax.swing.JFrame {
     
    DefaultTableModel model = new DefaultTableModel();
  
     private DefaultTableModel modelo;
    public Pedidos() {
        initComponents();
        this.setLocationRelativeTo(null);   
        this.setSize(800, 580);
    }
       //Agragamos las columnas a nuestra Tabla
    private void mostrarColumna(){
        modelo = (DefaultTableModel) tblPedidos.getModel();
        
        modelo.addColumn("ID_PEDIDOS");
        modelo.addColumn("ID_CLIENTES");
        modelo.addColumn("NOMBRE");
        modelo.addColumn("DIRECCION");
        modelo.addColumn("TELEFONO");
        modelo.addColumn("ESTADO");
    }
   
    private void cargarRegistro(){
        
        Pedido objPedido = new Pedido();
        
        modelo = (DefaultTableModel) tblPedidos.getModel();
        
        ResultSet resultado = objPedido.cargarPedidos();
        
        try {
            Object datos[] = new Object[6];
            while (resultado.next()) {
                for (int i = 0; i < 6; i++) {
                    datos[i] = resultado.getObject(i + 1);
                }
                modelo.addRow(datos);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error" + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtidped = new javax.swing.JTextField();
        txtidclie = new javax.swing.JTextField();
        txtnom = new javax.swing.JTextField();
        txtdir = new javax.swing.JTextField();
        txttel = new javax.swing.JTextField();
        btnRegistrarPedidos = new javax.swing.JButton();
        btnbuscarempleado = new javax.swing.JButton();
        btnEliminarPedido = new javax.swing.JButton();
        btnsalir = new javax.swing.JButton();
        btnmenuprincipal = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPedidos = new javax.swing.JTable();
        btnlimpiarcampos = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PEDIDOS");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(340, 30, 140, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("NOMBRE");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 200, 80, 20);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 255));
        jLabel4.setText("ID.PEDIDOS");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 110, 120, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 255));
        jLabel5.setText("ID.CLIENTES");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(30, 160, 100, 20);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 255));
        jLabel6.setText("DIRECCION");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(30, 240, 100, 20);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 255));
        jLabel7.setText("TELEFONO");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(30, 280, 80, 20);

        txtidped.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtidpedKeyTyped(evt);
            }
        });
        getContentPane().add(txtidped);
        txtidped.setBounds(140, 110, 180, 30);

        txtidclie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidclieActionPerformed(evt);
            }
        });
        txtidclie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtidclieKeyTyped(evt);
            }
        });
        getContentPane().add(txtidclie);
        txtidclie.setBounds(140, 150, 180, 30);

        txtnom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnomKeyTyped(evt);
            }
        });
        getContentPane().add(txtnom);
        txtnom.setBounds(140, 190, 180, 30);
        getContentPane().add(txtdir);
        txtdir.setBounds(140, 230, 180, 30);

        txttel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txttelKeyTyped(evt);
            }
        });
        getContentPane().add(txttel);
        txttel.setBounds(140, 270, 180, 30);

        btnRegistrarPedidos.setText("REGISTRAR");
        btnRegistrarPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarPedidosActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegistrarPedidos);
        btnRegistrarPedidos.setBounds(350, 160, 100, 30);

        btnbuscarempleado.setText("BUSCAR");
        btnbuscarempleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarempleadoActionPerformed(evt);
            }
        });
        getContentPane().add(btnbuscarempleado);
        btnbuscarempleado.setBounds(480, 160, 110, 30);

        btnEliminarPedido.setText("ELIMINAR");
        btnEliminarPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarPedidoMouseClicked(evt);
            }
        });
        btnEliminarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPedidoActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminarPedido);
        btnEliminarPedido.setBounds(480, 230, 110, 30);

        btnsalir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnsalir.setText("SALIR");
        btnsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnsalir);
        btnsalir.setBounds(250, 490, 80, 30);

        btnmenuprincipal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnmenuprincipal.setText("MENU PRINCIPAL");
        btnmenuprincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnmenuprincipalMouseClicked(evt);
            }
        });
        getContentPane().add(btnmenuprincipal);
        btnmenuprincipal.setBounds(440, 490, 150, 30);

        tblPedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPedidosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPedidos);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 360, 730, 120);

        btnlimpiarcampos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnlimpiarcampos.setText("LIMPIAR CAMPOS");
        btnlimpiarcampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimpiarcamposActionPerformed(evt);
            }
        });
        getContentPane().add(btnlimpiarcampos);
        btnlimpiarcampos.setBounds(390, 310, 140, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("ESTADO");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 320, 60, 20);

        txtEstado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEstadoKeyTyped(evt);
            }
        });
        getContentPane().add(txtEstado);
        txtEstado.setBounds(140, 310, 180, 30);

        btnActualizar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizar);
        btnActualizar.setBounds(620, 160, 110, 30);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setText("LIMPIAR TABLA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(560, 310, 130, 30);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/org-fondo-madera-negro.jpg"))); // NOI18N
        getContentPane().add(jLabel8);
        jLabel8.setBounds(0, 0, 810, 540);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtidclieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidclieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidclieActionPerformed

    private void btnRegistrarPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarPedidosActionPerformed
       //***programacion para el boton Guardar.
       
       //Validaci√≤n.
        if (txtidped.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, Ingrese Numero del Pedido");
            txtidped.requestFocus();
            return;
        }
        if (txtidclie.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, Ingrese una Cedula");
            txtidclie.requestFocus();
            return;
        }
        if (txtnom.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, Ingrese t√πs Nombres");
            txtnom.requestFocus();
            return;
        }
        if (txtdir.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, Ingrese una Direccion");
            txtdir.requestFocus();
            return;
        }
        if (txttel.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, Ingrese una Telefono");
            txttel.requestFocus();
            return;
        }
        if (txtEstado.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, Ingrese su Estado");
            txtEstado.requestFocus();
            return;
        }
        //Instanciaci√≤n de la clase Empleados para obtener todos los metodos, atributos
        
        Pedido objPedido = new Pedido();
        
        //Obtenemos todos los datos digitados por el Usuario.
        
        int idpedido =  Integer.parseInt(txtidped.getText());
        int idcliente = Integer.parseInt(txtidclie.getText());
        String nombre = txtnom.getText();
        String direccion = txtdir.getText();
        String telefono = txttel.getText();
        String estado = txtEstado.getText();
       
        try {
            boolean resultado = objPedido.insertarPedidos(idpedido, idcliente, nombre, direccion, telefono, estado);
            if (resultado == true) {
                JOptionPane.showMessageDialog(null, "Los datos se han registrado satisfactoriamente");
                txtidped.setText("");
                txtidclie.setText("");
                txtnom.setText("");
                txtdir.setText("");
                txttel.setText("");
                txtEstado.setText("");
                
            }
            else {
                
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Lo sentimos, ocurrio algo inesperado, por favor vuelva a intentarlo");
        }
      
    }//GEN-LAST:event_btnRegistrarPedidosActionPerformed

    private void btnsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsalirActionPerformed
        System.exit(WIDTH);
    }//GEN-LAST:event_btnsalirActionPerformed

    private void btnmenuprincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnmenuprincipalMouseClicked
        MENU MN = new MENU();
        MN .setVisible(true);
        dispose();
    }//GEN-LAST:event_btnmenuprincipalMouseClicked

    private void btnlimpiarcamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimpiarcamposActionPerformed
        txtidped.setText("");
        txtidclie.setText("");
        txtnom.setText("");
        txtdir.setText("");
        txttel.setText("");
        txtEstado.setText("");
    }//GEN-LAST:event_btnlimpiarcamposActionPerformed

    private void btnEliminarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPedidoActionPerformed
       
        if (tblPedidos.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Por favor, presione el boton de buscar");
            return;
        }
        
        if (tblPedidos.getSelectedRow() == -1 ) {
            JOptionPane.showMessageDialog(null, "Por favor, seleccione una fila");
            return;
        }
        
        Pedido objPedido = new Pedido();
        modelo = (DefaultTableModel) tblPedidos.getModel();
        
        try {
            
            int idpedido = Integer.parseInt(txtidped.getText());
            
            boolean result = objPedido.eliminarPedidos(idpedido);
            
            if (result == true) {
                JOptionPane.showMessageDialog(null, "El registro se elimin√≤ correctamente");
                //Limpiamos las cajas de texto y los ComboBox.
                txtidped.setText("");
                txtidclie.setText("");
                txtnom.setText("");
                txtdir.setText("");
                txttel.setText("");
                txtEstado.setText("");
                //Limpiamos la tabla (Registros, Columnas).
                modelo.setColumnCount(0);
                modelo.setRowCount(0);
            }
            else{
                JOptionPane.showMessageDialog(null, "Error al eliminar");
            }
                   
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Lo sentimos, ocurrio un problema, por favor intenta de nuevo");
            
        }
           
    }//GEN-LAST:event_btnEliminarPedidoActionPerformed

    private void btnEliminarPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarPedidoMouseClicked
         int eli=tblPedidos.getSelectedRowCount();
       if(eli>=0){
           model.removeRow(eli);
       }else{
           JOptionPane.showMessageDialog(null,"No Hay Datos Que Eliminar");
       }
    }//GEN-LAST:event_btnEliminarPedidoMouseClicked

    private void btnbuscarempleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarempleadoActionPerformed
        mostrarColumna();
        cargarRegistro();
    }//GEN-LAST:event_btnbuscarempleadoActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        //********************Programaci√≤n para el Boton actualizar************
        
        //Validar si el usuario no ha presionado el Boton de buscar.
        
        if (tblPedidos.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Por favor, presione el boton de buscar");
            return;
        }
        
        if (tblPedidos.getSelectedRow() == -1 ) {
            JOptionPane.showMessageDialog(null, "Por favor, seleccione una fila");
            return;
        }
        
        if (txtidped.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese Numero del Pedido!");
            txtidped.requestFocus();
            return;
        }
        if (txtidclie.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese una Cedula!");
            txtidclie.requestFocus();
            return;
        }
        
        if (txtnom.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, ingresa un Nombre");
            txtnom.requestFocus();
            return;
        }
        
        if (txtdir.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese una Direccion!");
            txtdir.requestFocus();
            return;
        }
        
        if (txttel.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese un Telefono!");
            txttel.requestFocus();
            return;
        }
        
        
        if (txtEstado.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Por favor, ingrese su Estado!");
            txtEstado.requestFocus();
            return;
        }
        
        
        //Instanciaci√≤n de la clase Empleados para obtener todos los metodos, atributos
        
        Pedido objPedido = new Pedido();
        
        
        int idpedido =  Integer.parseInt(txtidped.getText());
        int idcliente =  Integer.parseInt(txtidclie.getText());
        String nombre = txtnom.getText();
        String direccion = txtdir.getText();
        String telefono = txttel.getText();
        String estado = txtEstado.getText();
        
        
        modelo = (DefaultTableModel) tblPedidos.getModel();
        try {
            boolean result = objPedido.actualizarPediso(idpedido, idcliente, nombre, direccion, telefono, estado);
            if (result == true) {
                JOptionPane.showMessageDialog(null, "Los datos se Actualizaron correctamente.");
                //Limpiamos las cajas de texto y los ComboBox.
                txtidped.setText("");
                txtidclie.setText("");
                txtnom.setText("");
                txtdir.setText("");
                txttel.setText("");
                txtEstado.setText("");
                
                //Limpiamos la tabla (Registros, Columnas).
                modelo.setColumnCount(0);
                modelo.setRowCount(0);
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Error" + e.getMessage());
        }
                             
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void tblPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPedidosMouseClicked
         /*Programacion para cuando el Usuario seleccione una fila
        Los datos se muestre en los componentes graficos (TextField, ComboBox)*/
        
        modelo = (DefaultTableModel) tblPedidos.getModel();
        
        try {
            
            //Llenar los datos que se encuentran en la tabla
            txtidped.setText(String.valueOf(modelo.getValueAt(tblPedidos.getSelectedRow() , 0)));
            txtidclie.setText(String.valueOf(modelo.getValueAt(tblPedidos.getSelectedRow() , 1)));
            txtnom.setText(String.valueOf(modelo.getValueAt(tblPedidos.getSelectedRow() , 2)));
            txtdir.setText(String.valueOf(modelo.getValueAt(tblPedidos.getSelectedRow() , 3)));
            txttel.setText(String.valueOf(modelo.getValueAt(tblPedidos.getSelectedRow() , 4)));
            txtEstado.setText(String.valueOf(modelo.getValueAt(tblPedidos.getSelectedRow() , 5)));
       
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Lo sentimos, Ocurri√≤ un error al seleccionar una fila ¬°Intentalo de nuevo!");
        }
    }//GEN-LAST:event_tblPedidosMouseClicked

    private void txtidpedKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidpedKeyTyped
       char validar=evt.getKeyChar();
      
      if(Character.isLetter(validar)){
          getToolkit().beep();
          evt.consume();
          JOptionPane.showMessageDialog(null, "Ingrese solo Numeros");
      }
    }//GEN-LAST:event_txtidpedKeyTyped

    private void txtidclieKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidclieKeyTyped
       char validar=evt.getKeyChar();
      
      if(Character.isLetter(validar)){
          getToolkit().beep();
          evt.consume();
          JOptionPane.showMessageDialog(null, "Ingrese solo Numeros");
      }
    }//GEN-LAST:event_txtidclieKeyTyped

    private void txtnomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnomKeyTyped
      char validar=evt.getKeyChar();
      
      if(Character.isDigit(validar)){
          getToolkit().beep();
          evt.consume();
          JOptionPane.showMessageDialog(null, "Ingrese solo Letras");
      }
    }//GEN-LAST:event_txtnomKeyTyped

    private void txttelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttelKeyTyped
       char validar=evt.getKeyChar();
      
      if(Character.isLetter(validar)){
          getToolkit().beep();
          evt.consume();
          JOptionPane.showMessageDialog(null, "Ingrese solo Numeros");
      }
    }//GEN-LAST:event_txttelKeyTyped

    private void txtEstadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEstadoKeyTyped
        char validar=evt.getKeyChar();
      
      if(Character.isDigit(validar)){
          getToolkit().beep();
          evt.consume();
          JOptionPane.showMessageDialog(null, "Ingrese solo Letras");
      }
    }//GEN-LAST:event_txtEstadoKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        modelo.setColumnCount(0);
        modelo.setRowCount(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new RunnableImpl());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminarPedido;
    private javax.swing.JButton btnRegistrarPedidos;
    private javax.swing.JButton btnbuscarempleado;
    private javax.swing.JButton btnlimpiarcampos;
    private javax.swing.JButton btnmenuprincipal;
    private javax.swing.JButton btnsalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPedidos;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtdir;
    private javax.swing.JTextField txtidclie;
    private javax.swing.JTextField txtidped;
    private javax.swing.JTextField txtnom;
    private javax.swing.JTextField txttel;
    // End of variables declaration//GEN-END:variables

    private boolean eliminarPedidos(int idpedido) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private static class RunnableImpl implements Runnable {

        public RunnableImpl() {
        }

        public void run() {
            new Pedidos().setVisible(true);
        }
    }
}
